name: "Check and Deploy"
description: "Check-only deploy delta changes and run specified tests"
inputs:
  APEX_TESTS:
    description: "List of Apex test classes to run"
    required: false
  TEST_LEVEL:
    description: "Apex testing level for deployment"
    required: true
    default: "RunSpecifiedTests"
    options:
      - "RunSpecifiedTests"
      - "RunLocalTests"
      - "RunAllTestsInOrg"
  ORG_ALIAS:
    description: "Alias for the Salesforce org"
    required: true
runs:
  using: "composite"
  steps:

    - name: "Identifying Changed Apex Classes"
      shell: bash
      id: detect-classes
      run: |
        # List all changed Apex classes in the "changed-sources/force-app/main/default/classes/" folder
        changed_classes=$(find changed-sources/force-app/main/default/classes/ -name "*.cls" -exec basename {} .cls \;)
        
        echo "Changed Apex classes:"
        echo "$changed_classes"

        # Save the changed class names to a file for later use
        echo "$changed_classes" > changed_classes.txt

    - name: "Detect Relevant Apex Test Classes"
      shell: bash
      id: detect-tests
      run: |
        # Initialize an empty list of test classes
        test_classes=""
        
        # Read the changed class names from the file ( changed_classes.txt )
        while IFS= read -r class; do
          if [ -n "$class" ]; then
            tests=$(grep -rl "@isTest" force-app/main/default/classes 2>/dev/null | xargs -r grep -l "$class" 2>/dev/null | grep ".cls" | xargs -r -n 1 basename 2>/dev/null | sed 's/.cls$//')
            if [ -n "$tests" ]; then
              test_classes="$test_classes $tests"
            fi
          fi
        done < changed_classes.txt
      
        # Remove duplicate test class names and trim whitespace
        test_classes=$(echo "$test_classes" | tr ' ' '\n' | sort -u | tr '\n' ' ')
        
        echo "Detected Test Classes:"
        echo "$test_classes"
        
        # Set test classes as output to be used in the next step
        echo "APEX_TESTS=$test_classes" >> $GITHUB_ENV

    - name: "Check and Deploy"
      shell: bash
      run: |
        if [ "${{ inputs.ORG_ALIAS }}" == "prod" ]; then
          sf project deploy validate --source-dir "changed-sources/force-app" --target-org ${{ inputs.ORG_ALIAS }}
        else
          sf project deploy start --source-dir "changed-sources/force-app" --dry-run --test-level ${{ inputs.TEST_LEVEL }} --tests ${{ env.APEX_TESTS }}  --target-org ${{ inputs.ORG_ALIAS }}
